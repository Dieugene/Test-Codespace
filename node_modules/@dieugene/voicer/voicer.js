const axios = require("axios");

function init(apiKey) {

    async function recognizeFromTelegram(ctx, callback = text => {}){
        //ctx.reply(`Voice, ${ctx.message.from.username}`);

        const { voice, from } = ctx.message;
        const { id } = from;
        const { file_id } = voice;

        let fileLink = await ctx.telegram.getFileLink(file_id);
        // Получаем ссыль на голосовое сообщение
        const { href } = fileLink;
        const { data: voiceBuffer } = await axios.get(href, { responseType: 'arraybuffer' });
        const text = await recognizeVoice(voiceBuffer);
        await callback(text);
    }

    async function recognizeFromTelegram_old(ctx, callback = text => {}){
        //ctx.reply(`Voice, ${ctx.message.from.username}`);

        const { voice, from } = ctx.message;
        const { id } = from;
        const { file_id } = voice;

        ctx.telegram.getFileLink(file_id).then(async (fileLink) => {
            // Получаем ссыль на голосовое сообщение
            const { href } = fileLink;
            const { data: voiceBuffer } = await axios.get(href, { responseType: 'arraybuffer' });
            const text = await recognizeVoice(voiceBuffer);
            await callback(text);
        });
    }


    async function recognizeVoice(buffer, lang = 'ru-RU'){
        const response = await axios({
            method: 'post',
            url: `https://stt.api.cloud.yandex.net/speech/v1/stt:recognize?lang=${lang}`,
            headers: {
                'Authorization': 'Api-Key ' + apiKey,
                'Content-Type': 'application/octet-stream'
            },
            data: buffer
        });
        return response.data?.result || '' ;
    }

    return {
        recognize: recognizeFromTelegram
    }

}

module.exports = init;